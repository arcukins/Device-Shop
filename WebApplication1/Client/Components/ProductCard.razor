@using WebApplication1.Shared.Models
@using WebApplication1.Shared.ViewModels
@using WebApplication1.Client.Services
@using WebApplication1.Shared.State 
@inject IBasketService basketService
@inject StateContainer state

<div class="productCard">
    @if (this.HasDiscount)
    {
        <div class="saleBadge">
            <span class="saleLabel">SALE</span>
        </div>
    }
    <div class="productImage">
        <img src="@this.Product.ImageUrl" />
    </div>
    <div>
        <NavLink href="counter">
            <div class="productName">@this.Product.Name</div>
        </NavLink>
        <div class="productManufacturer">@this.Product.Manufacturer</div>
    </div>
    <div class="d-flex">
        @if (HasDiscount)
        {
            <div class="productReducedFromPrice">$ @this.Product.OriginalPrice</div>
        }

        <div class="productPrice">$ @this.Product.Price</div>
    </div>

    <div class="productActions">
        <button @onclick="AddToCart" class="addToCard" href="counter">
            <span>@(!this.productIsInCart ? "Add to cart" : "To Checkout")</span>
        </button>
        <NavLink class="readMore" href="@this.ProductUrl">
            <span>Read More</span>
        </NavLink>
    </div>
</div>

@code {
    [Parameter]
    public Product Product { get; set; }

    [Parameter]
    public EventCallback<Product> ProductChanged { get; set; }

    private bool HasDiscount;

    private string ProductUrl;

    private bool productIsInCart;

    protected override void OnInitialized()
    {
        state.OnChange += StateHasChanged;

        Task.Delay(3000);

        this.HasDiscount = Product?.OriginalPrice - Product?.Price > 0;

        this.ProductUrl = $"product/{Product.UniqueName}";

        this.productIsInCart = state?.Basket?.Products.Any(p => p.Id == this.Product.Id) ?? false;
    }

    private async void AddToCart()
    {
        if (productIsInCart)
        {
            return;
        }

        var product = new AddToCart
        {
            ProductID = this.Product.Id,
            Quantity = 1
        };

        state.Basket = await basketService.AddToCart(product);

        Console.WriteLine("added");
    }
}
